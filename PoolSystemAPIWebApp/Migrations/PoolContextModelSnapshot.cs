// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoolSystemAPIWebApp.Models;

#nullable disable

namespace PoolSystemAPIWebApp.Migrations
{
    [DbContext(typeof(PoolContext))]
    partial class PoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassUser", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ClassId", "UserId")
                        .HasName("PK__Class_Us__166F9AF65884513F");

                    b.HasIndex("UserId");

                    b.ToTable("Class_Users", (string)null);
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Abonnement", b =>
                {
                    b.Property<int>("AbonnementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("abonnement_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AbonnementId"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("AbonnementId")
                        .HasName("PK__Abonneme__920B30F8E374D5EE");

                    b.HasIndex("UserId");

                    b.ToTable("Abonnements");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Administrator", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("AdminId")
                        .HasName("PK__Administ__43AA41414F2448F6");

                    b.HasIndex("UserId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("class_name");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__FDF47986C5BAE7B7");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("day_of_week");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__C46A8A6FDC997DC1");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370F748B09A1");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E616417756828")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ__Users__F3DBC572A495439A")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassUser", b =>
                {
                    b.HasOne("PoolSystemAPIWebApp.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Class_Use__class__44FF419A");

                    b.HasOne("PoolSystemAPIWebApp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Class_Use__user___45F365D3");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Abonnement", b =>
                {
                    b.HasOne("PoolSystemAPIWebApp.Models.User", "User")
                        .WithMany("Abonnements")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Abonnemen__user___3C69FB99");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Administrator", b =>
                {
                    b.HasOne("PoolSystemAPIWebApp.Models.User", "User")
                        .WithMany("Administrators")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Administr__user___49C3F6B7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Class", b =>
                {
                    b.HasOne("PoolSystemAPIWebApp.Models.Schedule", "Schedule")
                        .WithMany("Classes")
                        .HasForeignKey("ScheduleId")
                        .HasConstraintName("FK__Classes__schedul__4222D4EF");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.Schedule", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("PoolSystemAPIWebApp.Models.User", b =>
                {
                    b.Navigation("Abonnements");

                    b.Navigation("Administrators");
                });
#pragma warning restore 612, 618
        }
    }
}
